XML
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <Spinner
        android:id="@+id/city_spinner"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:entries="@array/cities_array" />

    <TextView
        android:id="@+id/selected_city_text"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:textSize="20sp"
        android:textStyle="bold" />

</LinearLayout>

JAVA

import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {

    private TextView selectedCityText;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        selectedCityText = findViewById(R.id.selected_city_text);
        Spinner citySpinner = findViewById(R.id.city_spinner);

        // Create an ArrayAdapter using the string array and a default spinner layout
        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
                R.array.cities_array, android.R.layout.simple_spinner_item);

        // Specify the layout to use when the list of choices appears
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

        // Apply the adapter to the spinner
        citySpinner.setAdapter(adapter);

        // Set an OnItemSelectedListener to handle the selection of a city
        citySpinner.setOnItemSelectedListener(this);
    }

    @Override
    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
        // Get the selected city name from the Spinner
        String selectedCity = parent.getItemAtPosition(position).toString();

        // Update the selectedCityText with the selected city name
        selectedCityText.setText(selectedCity);

        // Show a Toast message with the selected city name
        Toast.makeText(this, "Selected city: " + selectedCity, Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {
        // Do nothing
    }
}

arrays.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="cities_array">
        <item>New York</item>
        <item>London</item>
        <item>Paris</item>
        <item>Tokyo</item>
        <item>Sydney</item>
    </string-array>
</resources>
